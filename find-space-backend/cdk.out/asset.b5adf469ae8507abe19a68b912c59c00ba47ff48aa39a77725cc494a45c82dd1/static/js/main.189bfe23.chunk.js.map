{"version":3,"sources":["services/config.ts","services/authService.ts","utils/history.ts","components/login.tsx","components/navbar.tsx","components/home.tsx","components/profile.tsx","components/space/createSpace.tsx","services/dataService.ts","utils/utils.ts","assets/images/defaultBuilding.jpg","components/space/spaceComponent.tsx","components/space/confirmModalComponent.tsx","components/space/spaces.tsx","components/App.tsx","index.tsx"],"names":["apiEndPoint","Config","REGION","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","PHOTO_BUCKET","api","baseURL","spaceURL","TEST_USER_NAME","TEST_USER_PASSWORD","Amplify","configure","Auth","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","authenticationFlowType","AuthService","userName","password","signIn","user","getUsername","cognitoUser","undefined","userAttributes","attributes","console","log","JSON","stringify","push","cognitorIdentityPool","AWS","credentials","IdentityPoolId","Logins","getSignInUserSession","getIdToken","getJwtToken","this","refreshCredientials","Promise","resolve","reject","refresh","err","createBrowserHistory","Login","state","loginAttempted","loginSuccessful","event","setState","target","value","evet","preventDefault","props","authService","login","result","setUser","history","loginMessage","onSubmit","e","handleSubmit","onChange","setUserName","type","setPassword","React","Component","NavBar","loginLogout","to","style","float","className","Home","Profile","a","getUserAttributes","rows","userAttribute","Name","Value","profileSpace","renderUserAttributes","CreateSpace","name","description","location","photoURL","files","photo","stateClone","dataService","createSpace","id","alert","message","error","photoSpace","localPhotoURL","URL","createObjectURL","alt","src","setName","setLocation","setDescription","setPhotoUrl","config","update","AppConfig","DataService","requestURL","fetch","method","requestResult","json","responseJSON","spaceId","uploadPublicFile","requestOptions","body","resultJson","spaceid","file","bucket","fileName","Math","random","toString","slice","s3Client","S3","upload","Bucket","Key","Body","ACL","promise","uploadResult","Location","SpaceComponent","defaultImage","renderImage","onClick","reserveSpace","ConfirmModalComponent","show","content","close","Spaces","spaces","showModal","modalContent","bind","closeModal","getSpaces","resered","space","renderSpaces","App","getAWSTemporyCreds","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"4VAAMA,EAAY,+DACLC,EAAS,CAClBC,OAAO,YACPC,aAAa,sBACbC,cAAc,6BACdC,iBAAiB,iDACjBC,aAAa,4BACbC,IAAI,CACAC,QAAQR,EACRS,SAAS,GAAD,OAAIT,EAAJ,WAEZU,eAAe,eACfC,mBAAmB,Y,QCLvBC,UAAQC,UAAU,CACdC,KAAM,CACFC,iBAAiB,EACjBC,OAAQf,EAAOC,OACfe,WAAYhB,EAAOE,aACnBe,eAAgBjB,EAAOI,iBACvBc,oBAAqBlB,EAAOG,cAC5BgB,uBAAwB,wBAIzB,IAAMC,EAAb,4HACI,WAAmBC,EAAkBC,GAArC,gGAE2BT,IAAKU,OAAOF,EAAUC,GAFjD,cAEcE,EAFd,yBAGe,CACHH,SAAUG,EAAKC,cACfC,YAAaF,IALzB,8DASeG,GATf,yDADJ,+HAeI,WAA+BH,GAA/B,gFACUI,EAAmC,GAD7C,SAE2Bf,IAAKe,eAAeJ,EAAKE,aAFpD,cAEUG,EAFV,OAGIC,QAAQC,IAAIC,KAAKC,UAAUJ,IAE3BD,EAAeM,KAAf,MAAAN,EAAc,YAASC,IAL3B,kBAMWD,GANX,2CAfJ,8HAwBI,WAAgCJ,GAAhC,8EACUW,EADV,sBACgDnC,EAAOC,OADvD,0BAC+ED,EAAOE,cAClFkC,SAAWC,YAAc,IAAID,6BAA+B,CACxDE,eAAetC,EAAOI,iBACtBmC,OAAO,eACFJ,EAAsBX,EAAKgB,uBAAwBC,aAAaC,gBAEvE,CACE3B,OAAOf,EAAOC,SARtB,SAUU0C,KAAKC,sBAVf,gDAxBJ,+HAqCI,uGACW,IAAIC,SAAQ,SAACC,EAAQC,GACvBX,SAAWC,YAA4BW,SAAQ,SAAAC,GACzCA,EACCF,EAAOE,GAEPH,WANhB,2CArCJ,6D,QChBeI,gB,OCkBFC,EAAb,4MAEIC,MAAoB,CAChB/B,SAAS,GACTC,SAAS,GACT+B,gBAAe,EACfC,iBAAgB,GANxB,iDASI,SAAoBC,GAChBZ,KAAKa,SAAS,CACVnC,SAASkC,EAAME,OAAOC,UAXlC,yBAcI,SAAoBC,GAChBhB,KAAKa,SAAS,CACVlC,SAASqC,EAAKF,OAAOC,UAhBjC,iEAoBI,WAA2BH,GAA3B,8EACIA,EAAMK,iBADV,SAGuBjB,KAAKkB,MAAMC,YAAYC,MACtCpB,KAAKS,MAAM/B,SACXsB,KAAKS,MAAM9B,UALnB,QAGU0C,EAHV,SAQQrB,KAAKa,SAAS,CACVH,gBAAe,EACfC,iBAAgB,IAEpBX,KAAKkB,MAAMI,QAAQD,GACnBE,EAAQhC,KAAK,aAEbS,KAAKa,SAAS,CACVH,gBAAe,EACfC,iBAAgB,IAjB5B,gDApBJ,2EA0CA,WAA2B,IACnBa,EADkB,OAStB,OAPGxB,KAAKS,MAAMC,iBAENc,EADDxB,KAAKS,MAAME,gBACG,sDAEA,kDAIjB,gCACI,8CACA,uBAAMc,SAAU,SAAAC,GAAC,OAAE,EAAKC,aAAaD,IAArC,UACI,uBAAOX,MAAOf,KAAKS,MAAM/B,SAAUkD,SAAU,SAAAF,GAAC,OAAE,EAAKG,YAAYH,MAAK,uBACtE,uBAAOX,MAAOf,KAAKS,MAAM9B,SAAUmD,KAAK,WAAWF,SAAU,SAAAF,GAAC,OAAE,EAAKK,YAAYL,MAAK,uBACtF,uBAAOI,KAAK,SAASf,MAAM,aAG9BS,SA5Db,GAA2BQ,IAAMC,W,gBChBpBC,EAAb,4JAEI,WACI,IAAIC,EAMJ,OAJIA,EADDnC,KAAKkB,MAAMrC,KACE,cAAC,IAAD,CAAMuD,GAAG,UAAUC,MAAO,CAACC,MAAM,SAAjC,SAA4CtC,KAAKkB,MAAMrC,KAAKH,WAE5D,cAAC,IAAD,CAAM0D,GAAG,SAASC,MAAO,CAACC,MAAM,SAAhC,mBAGZ,sBAAKC,UAAU,SAAf,UACI,cAAC,IAAD,CAAMH,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,qBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,oBACCD,SAdjB,GAA4BH,IAAMC,WCFrBO,EAAb,4JAEI,WACI,OACI,2DAJZ,GAA0BR,IAAMC,W,QCYnBQ,EAAb,4MACIhC,MAAoB,CAChBxB,eAAe,IAFvB,8FAKI,4BAAAyD,EAAA,0DACQ1C,KAAKkB,MAAMrC,KADnB,gCAEmCmB,KAAKkB,MAAMC,YAAYwB,kBAAkB3C,KAAKkB,MAAMrC,MAFvF,OAEcI,EAFd,OAGQe,KAAKa,SAAS,CACV5B,eAAeA,IAJ3B,gDALJ,wFAaI,WACI,IAD0B,EACpB2D,EAAK,GADe,cAEC5C,KAAKS,MAAMxB,gBAFZ,IAE1B,IAAI,EAAJ,qBAAqD,CAAC,IAA5C4D,EAA2C,QACjDD,EAAKrD,KACD,+BACI,6BAAKsD,EAAcC,OACnB,6BAAKD,EAAcE,UAFdF,EAAcC,QAJL,8BAU1B,OAAO,gCACH,gCACKF,QAzBjB,oBA6BI,WACI,IAAII,EAYJ,OAVIA,EADAhD,KAAKkB,MAAMrC,KACE,gCACT,yCAAYmB,KAAKkB,MAAMrC,KAAKH,YADnB,gCAGRsB,KAAKiD,0BAGG,0CACF,cAAC,IAAD,CAAMb,GAAG,SAAT,sBAIX,0DAEKY,SA7CjB,GAA6BhB,IAAMC,W,SCGtBiB,EAAb,4MAEIzC,MAA2B,CACvB0C,KAAK,GACLC,YAAY,GACZC,SAAU,GACVC,SAAU,IANlB,6CASI,SAAgB1C,GACZZ,KAAKa,SAAS,CAAEsC,KAAMvC,EAAME,OAAOC,UAV3C,yBAYI,SAAoBH,GAChBZ,KAAKa,SAAS,CAAEwC,SAAUzC,EAAME,OAAOC,UAb/C,4BAeI,SAAuBH,GACnBZ,KAAKa,SAAS,CAAEuC,YAAaxC,EAAME,OAAOC,UAhBlD,yBAmBI,SAAoBH,GACZA,EAAME,OAAOyC,OAAS3C,EAAME,OAAOyC,MAAM,IACzCvD,KAAKa,SAAS,CAAE2C,MAAO5C,EAAME,OAAOyC,MAAM,OArBtD,iEAyBI,WAA2B3C,GAA3B,gFACIA,EAAMK,iBACAwC,EAFV,eAE2BzD,KAAKS,OAFhC,kBAIyBT,KAAKkB,MAAMwC,YAAYC,YAAYF,GAJ5D,OAIcG,EAJd,OAKQC,MAAM,yBAAD,OAA0BD,IALvC,gDAOQC,MAAM,gCAAD,OAAiC,KAAMC,UAC5C3E,QAAQ4E,MAAR,MARR,yDAzBJ,2EAsCI,WAAU,IACEC,EADH,OAED,GAAIhE,KAAKS,MAAM+C,MAAO,CAClB,IAAMS,EAAgBC,IAAIC,gBAAgBnE,KAAKS,MAAM+C,OACrDQ,EAAa,qBAAKI,IAAI,GAAGC,IAAKJ,SAE9BD,EAAa,wBAEjB,OAAO,uBAAMvC,SAAU,SAAAC,GAAC,OAAI,EAAKC,aAAaD,IAAvC,UACH,0CAAY,uBACR,uBAAOyB,KAAK,aAAapC,MAAOf,KAAKS,MAAM0C,KAAMvB,SAAU,SAAAF,GAAC,OAAI,EAAK4C,QAAQ5C,SACzE,uBACR,8CAAgB,uBACZ,uBAAOyB,KAAK,iBAAiBpC,MAAOf,KAAKS,MAAM4C,SAAUzB,SAAU,SAAAF,GAAC,OAAI,EAAK6C,YAAY7C,SACrF,uBACR,iDAAmB,uBACf,uBAAOyB,KAAK,iBAAiBpC,MAAOf,KAAKS,MAAM2C,YAAaxB,SAAU,SAAAF,GAAC,OAAI,EAAK8C,eAAe9C,SAC3F,uBACR,2CAAa,uBACT,uBAAOyB,KAAK,QAAQrB,KAAK,OAAOF,SAAU,SAAAF,GAAC,OAAI,EAAK+C,YAAY/C,SAC5D,uBACPsC,EAAW,uBACZ,uBAAO,YAAU,gBAAgBlC,KAAK,SAASf,MAAM,wBA5DrE,GAAiCkB,aCXjCyC,SAAOC,OAAO,CACVvG,OAAOwG,EAAUtH,SAEd,IAAMuH,EAAb,gIACI,+FACUC,EAAaF,EAAUjH,IAAIE,SADrC,SAE+BkH,MACvBD,EAAW,CACPE,OAAO,QAJnB,cAEUC,EAFV,gBAO6BA,EAAcC,OAP3C,cAOUC,EAPV,OAQIhG,QAAQC,IAAIC,KAAKC,UAAU6F,IAR/B,kBASWA,GATX,2CADJ,uHAaI,WAA0BC,GAA1B,oEACmB,SAAZA,EADP,yCAEe,OAFf,qCAIepG,GAJf,2CAbJ,uHAqBI,WAAyB2E,GAAzB,mFACOA,EAAYH,MADnB,gCAE+BxD,KAAKqF,iBAAiB1B,EAAYH,MAAMoB,EAAUlH,cAFjF,OAEc4F,EAFd,OAGQK,EAAYL,SAASA,EACrBK,EAAYH,WAAMxE,EAJ1B,cAMU8F,EAAWF,EAAUjH,IAAIE,SACzByH,EAA6B,CAC/BN,OAAO,OACPO,KAAKlG,KAAKC,UAAUqE,IAT5B,UAWuBoB,MAAMD,EAAWQ,GAXxC,eAWUjE,EAXV,OAYIlC,QAAQC,IAAIiC,GAZhB,UAa2BA,EAAO6D,OAblC,eAaUM,EAbV,OAcIrG,QAAQC,IAAIoG,GAdhB,kBAeWnG,KAAKC,UAAUkG,EAAWC,UAfrC,iDArBJ,4HAuCI,WAA+BC,EAAWC,GAA1C,kFACUC,EChDHC,KAAKC,SAASC,SAAS,IAAIC,MAAM,GDgDDN,EAAKvC,KAD5C,SAGc8C,EAAS,IAAIC,KAAG,CAClB9H,OAAOwG,EAAUtH,SAJ7B,SAMmC2I,EAASE,OAAO,CACvCC,OAAOT,EACPU,IAAIT,EACJU,KAAKZ,EACLa,IAAI,gBACLC,UAXX,cAMcC,EANd,yBAYeA,EAAaC,UAZ5B,oGAvCJ,gEETe,MAA0B,4CCW5BC,G,OAAb,iKAEI,WACI,OAAI3G,KAAKkB,MAAMoC,SACJ,qBAAKe,IAAKrE,KAAKkB,MAAMoC,SAAUc,IAAKpE,KAAKkB,MAAMiC,OAE/C,qBAAKkB,IAAKuC,EAAcxC,IAAKpE,KAAKkB,MAAMiC,SAN3D,oBASI,WAAqB,IAAD,OAChB,OAAO,sBAAKZ,UAAU,iBAAf,UACFvC,KAAK6G,cACN,uBAAOtE,UAAU,OAAjB,SAAyBvC,KAAKkB,MAAMiC,OAAa,uBACjD,uBAAOZ,UAAU,UAAjB,SAA4BvC,KAAKkB,MAAMkE,UAAgB,uBACvD,uBAAO7C,UAAU,WAAjB,SAA6BvC,KAAKkB,MAAMmC,WAAiB,uBACzD,wBAAQyD,QAAS,kBAAI,EAAK5F,MAAM6F,aAAa,EAAK7F,MAAMkE,UAAxD,qBAAmF,yBAL3CpF,KAAKkB,MAAMkE,aAV/D,GAAoCnD,cCHvB+E,G,OAAb,4JAEI,WAAqB,IAAD,OAChB,OAAKhH,KAAKkB,MAAM+F,KAGL,qBAAK1E,UAAU,QAAf,SACH,sBAAKA,UAAU,gBAAf,UACI,8DACA,oBAAIA,UAAU,YAAd,SAA2BvC,KAAKkB,MAAMgG,UACtC,wBAAQJ,QAAS,kBAAI,EAAK5F,MAAMiG,SAAhC,4BAND,SAJnB,GAA2ClF,cCStBmF,E,kDAEjB,WAAYlG,GAAmB,IAAD,8BAC1B,cAAMA,IACDT,MAAM,CACP4G,OAAO,GACPC,WAAU,EACVC,aAAa,IAEjB,EAAKR,aAAa,EAAKA,aAAaS,KAAlB,gBAClB,EAAKC,WAAW,EAAKA,WAAWD,KAAhB,gBARU,E,4FAW9B,4BAAA9E,EAAA,sEACuB1C,KAAKkB,MAAMwC,YAAYgE,YAD9C,OACUL,EADV,OAEIrH,KAAKa,SAAS,CACVwG,OAAOA,IAHf,gD,uHAOA,WAA2BjC,GAA3B,uFAC0BpF,KAAKkB,MAAMwC,YAAYqD,aAAa3B,GAD9D,QACUuC,EADV,QAGQ3H,KAAKa,SAAS,CACVyG,WAAU,EACVC,aAAa,yBAAD,OAA0BnC,EAA1B,gCAAyDuC,KAGzE3H,KAAKa,SAAS,CACVyG,WAAU,EACVC,aAAa,gCAAD,OAAiCnC,KAVzD,gD,+EAgBA,WACIpF,KAAKa,SAAS,CACVyG,WAAU,EACVC,aAAa,O,0BAGrB,WACI,IADkB,EACZ3E,EAAW,GADC,cAEE5C,KAAKS,MAAM4G,QAFb,IAElB,2BAAuC,CAAC,IAA7BO,EAA4B,QACnChF,EAAKrD,KACD,cAAC,EAAD,CAEI6F,QAASwC,EAAMxC,QACfjC,KAAMyE,EAAMzE,KACZE,SAAUuE,EAAMvE,SAChBC,SAAUsE,EAAMtE,SAChByD,aAAc/G,KAAK+G,cALda,EAAMxC,WALL,8BAclB,OAAOxC,I,oBAEX,WACI,OAAO,gCACH,4DACA,cAAC,IAAD,CAAMR,GAAG,eAAT,0BAA4C,uBAC3CpC,KAAK6H,eACN,cAAC,EAAD,CACIZ,KAAMjH,KAAKS,MAAM6G,UACjBJ,QAASlH,KAAKS,MAAM8G,aACpBJ,MAAOnH,KAAKyH,oB,GAlEQxF,aCDvB6F,EAAb,kDAIE,WAAY5G,GAAa,IAAD,8BACtB,cAAMA,IAJAC,YAA2B,IAAI1C,EAGf,EAFhBiF,YAAwB,IAAImB,EAIlC,EAAKpE,MAAQ,CACX5B,UAAMG,GAER,EAAKsC,QAAU,EAAKA,QAAQkG,KAAb,gBALO,EAJ1B,kFAWE,WAAsB3I,GAAtB,wEACEmB,KAAKa,SAAS,CACZhC,KAAMA,IAFV,SAIQmB,KAAKmB,YAAY4G,mBAAmBlJ,EAAKE,aAJjD,gDAXF,2EAkBE,WACE,OACE,qBAAKwD,UAAU,UAAf,SACE,cAAC,IAAD,CAAQhB,QAASA,EAAjB,SACE,gCACE,cAAC,EAAD,CAAQ1C,KAAMmB,KAAKS,MAAM5B,OACzB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmJ,OAAK,EAACC,KAAK,IAAIC,UAAW1F,IACjC,cAAC,IAAD,CAAOwF,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,CAAO9G,YAAanB,KAAKmB,YAAaG,QAAStB,KAAKsB,YAEtD,cAAC,IAAD,CAAO0G,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAAS9G,YAAanB,KAAKmB,YAAatC,KAAMmB,KAAKS,MAAM5B,SAE3D,cAAC,IAAD,CAAOmJ,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,CAAQvE,YAAa1D,KAAK0D,gBAE5B,cAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,EAAD,CAAavE,YAAa1D,KAAK0D,8BApC/C,GAAyB1B,IAAMC,WCX/BkG,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.189bfe23.chunk.js","sourcesContent":["const apiEndPoint='https://z9ym4hobkb.execute-api.us-east-1.amazonaws.com/prod/';\r\nexport const Config = {\r\n    REGION:'us-east-1',\r\n    USER_POOL_ID:'us-east-1_PsL2fDE44',\r\n    APP_CLIENT_ID:'6n65p0532shng7hjuo9lhlh6j2',\r\n    IDENTITY_POOL_ID:'us-east-1:90f61513-6cb6-41ac-a722-f2ee20bce693',\r\n    PHOTO_BUCKET:'space-photos-1216df61bb73',\r\n    api:{\r\n        baseURL:apiEndPoint,\r\n        spaceURL:`${apiEndPoint}spaces`\r\n    },\r\n    TEST_USER_NAME:'findspaceapp',\r\n    TEST_USER_PASSWORD:'zaq1@WSX'\r\n}","import { CognitoUser } from '@aws-amplify/auth'\r\nimport Amplify, { Auth } from 'aws-amplify';\r\nimport { User, UserAttributes } from \"../models/model\";\r\nimport { Config } from \"./config\";\r\nimport  * as AWS from 'aws-sdk';\r\nimport {Credentials} from 'aws-sdk/lib/credentials';\r\n\r\nAmplify.configure({\r\n    Auth: {\r\n        mandatorySignIn: false,\r\n        region: Config.REGION,\r\n        userPoolId: Config.USER_POOL_ID,\r\n        identityPoolId: Config.IDENTITY_POOL_ID,\r\n        userPoolWebClientId: Config.APP_CLIENT_ID,\r\n        authenticationFlowType: 'USER_PASSWORD_AUTH'\r\n    }\r\n});\r\n\r\nexport class AuthService {\r\n    public async login(userName: string, password: string): Promise<User | undefined> {\r\n        try {\r\n            const user = await Auth.signIn(userName, password) as CognitoUser;\r\n            return {\r\n                userName: user.getUsername(),\r\n                cognitoUser: user\r\n            };\r\n\r\n        } catch (error) {\r\n            return undefined;\r\n        }\r\n\r\n    }\r\n\r\n    public async getUserAttributes(user: User): Promise<UserAttributes[]> {\r\n        const userAttributes: UserAttributes[] = [];\r\n        const attributes=await Auth.userAttributes(user.cognitoUser);\r\n        console.log(JSON.stringify(attributes));\r\n        \r\n        userAttributes.push(...attributes);\r\n        return userAttributes;\r\n    }\r\n\r\n    public async getAWSTemporyCreds(user:CognitoUser){\r\n        const cognitorIdentityPool = `cognito-idp.${Config.REGION}.amazonaws.com/${Config.USER_POOL_ID}`;\r\n        AWS.config.credentials = new AWS.CognitoIdentityCredentials({\r\n            IdentityPoolId:Config.IDENTITY_POOL_ID,\r\n            Logins:{\r\n                [cognitorIdentityPool]:user.getSignInUserSession()!.getIdToken().getJwtToken()\r\n            },\r\n        },{\r\n            region:Config.REGION\r\n        });\r\n        await this.refreshCredientials();\r\n    }\r\n\r\n    private async refreshCredientials():Promise<void>{\r\n        return new Promise((resolve,reject)=>{\r\n            (AWS.config.credentials as Credentials).refresh(err=>{\r\n                if(err){\r\n                    reject(err);\r\n                }else{\r\n                    resolve();\r\n                }\r\n            })\r\n        })\r\n    }\r\n}","import {createBrowserHistory} from 'history'\r\n\r\nexport default createBrowserHistory();","import React, { SyntheticEvent } from \"react\";\r\nimport { User } from \"../models/model\";\r\nimport { AuthService } from \"../services/authService\";\r\nimport history from '../utils/history';\r\n\r\ninterface LoginProps {\r\n    authService: AuthService,\r\n    setUser:(user:User)=>void\r\n}\r\n\r\ninterface LoginState {\r\n    userName:string,\r\n    password:string,\r\n    loginAttempted:boolean,\r\n    loginSuccessful:boolean\r\n}\r\n\r\ninterface CustomEvent {\r\n    target:HTMLInputElement\r\n}\r\nexport class Login extends React.Component <LoginProps, LoginState>{\r\n\r\n    state: LoginState = {\r\n        userName:'',\r\n        password:'',\r\n        loginAttempted:false,\r\n        loginSuccessful:false\r\n    }\r\n\r\n    private setUserName(event:CustomEvent){\r\n        this.setState({\r\n            userName:event.target.value\r\n        });\r\n    }\r\n    private setPassword(evet:CustomEvent){\r\n        this.setState({\r\n            password:evet.target.value\r\n        });\r\n    }\r\n\r\n    private async handleSubmit(event:SyntheticEvent){\r\n        event.preventDefault();\r\n\r\n        const result=await this.props.authService.login(\r\n            this.state.userName,\r\n            this.state.password\r\n            );\r\n        if(result){\r\n            this.setState({\r\n                loginAttempted:true,\r\n                loginSuccessful:true\r\n            });\r\n            this.props.setUser(result);\r\n            history.push('/profile')\r\n        }else{\r\n            this.setState({\r\n                loginAttempted:true,\r\n                loginSuccessful:false\r\n            });\r\n        }\r\n    }\r\n\r\nrender(): React.ReactNode {\r\n    let loginMessage:any;\r\n    if(this.state.loginAttempted){\r\n        if(this.state.loginSuccessful){\r\n            loginMessage=<label>Login successfule</label>\r\n        }else{\r\n            loginMessage=<label>Login failed</label>\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <h2>Please login</h2>\r\n            <form onSubmit={e=>this.handleSubmit(e)}>\r\n                <input value={this.state.userName} onChange={e=>this.setUserName(e)}/><br/>\r\n                <input value={this.state.password} type='password' onChange={e=>this.setPassword(e)}/><br/>\r\n                <input type='submit' value='Login' />\r\n\r\n            </form>\r\n            {loginMessage}\r\n        </div>\r\n    )\r\n}\r\n}","import React from \"react\";\r\nimport { User } from \"../models/model\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport class NavBar extends React.Component<{user:User|undefined}>{\r\n\r\n    render(): React.ReactNode {\r\n        let loginLogout:any;\r\n        if(this.props.user){\r\n            loginLogout=<Link to='/logout' style={{float:'right'}}>{this.props.user.userName}</Link>\r\n        }else{\r\n            loginLogout=<Link to='/login' style={{float:'right'}}>Login</Link>\r\n        }\r\n        return (\r\n            <div className=\"navbar\">\r\n                <Link to='/'>Home</Link>\r\n                <Link to='/profile'>Profile</Link>\r\n                <Link to='/spaces'>Spaces</Link>\r\n                {loginLogout}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class Home extends React.Component{\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <div>\r\n                Welcome to home page\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { User, UserAttributes } from \"../models/model\";\r\nimport { AuthService } from \"../services/authService\";\r\n\r\ninterface ProfileState{\r\n    userAttributes:UserAttributes[]\r\n};\r\n\r\ninterface ProfileProps{\r\n    user:User|undefined,\r\n    authService:AuthService\r\n};\r\n\r\nexport class Profile extends React.Component<ProfileProps,ProfileState>{\r\n    state: ProfileState={\r\n        userAttributes:[]\r\n    };\r\n\r\n    async componentDidMount(){\r\n        if (this.props.user) {\r\n            const userAttributes=await this.props.authService.getUserAttributes(this.props.user);\r\n            this.setState({\r\n                userAttributes:userAttributes\r\n            })\r\n        } \r\n    }\r\n    private renderUserAttributes(){\r\n        const rows=[];\r\n        for(const userAttribute of this.state.userAttributes){\r\n            rows.push(\r\n                <tr key={userAttribute.Name}>\r\n                    <td>{userAttribute.Name}</td>\r\n                    <td>{userAttribute.Value}</td>\r\n                </tr>\r\n            );\r\n        };\r\n        return <table>\r\n            <tbody>\r\n                {rows}\r\n            </tbody>\r\n        </table>\r\n    }\r\n    render(): React.ReactNode {\r\n        let profileSpace;\r\n        if (this.props.user) {\r\n            profileSpace=<div>\r\n                <h3> hello {this.props.user.userName}</h3>\r\n                Here are your UserAttributes:\r\n                {this.renderUserAttributes()}\r\n                </div>\r\n        } else {\r\n            profileSpace=<div>\r\n                Please <Link to='/login' >Login</Link>\r\n            </div>\r\n        }\r\n        return (\r\n            <div>\r\n                Welcome to profile page\r\n                {profileSpace}\r\n            </div>\r\n        )\r\n    }\r\n}","import { Component, SyntheticEvent } from \"react\";\r\nimport { DataService } from \"../../services/dataService\";\r\n\r\ninterface CustomEvent {\r\n    target: HTMLInputElement\r\n}\r\nexport interface ICreateSpaceState {\r\n    name?: string,\r\n    location?: string,\r\n    description?: string,\r\n    photoURL?: string,\r\n    photo?: File\r\n}\r\ninterface ICreateSpaceProps {\r\n    dataService: DataService\r\n}\r\n\r\nexport class CreateSpace extends Component<ICreateSpaceProps, ICreateSpaceState> {\r\n\r\n    state: ICreateSpaceState = {\r\n        name:'',\r\n        description:'',\r\n        location: '',\r\n        photoURL: ''\r\n    }\r\n\r\n    private setName(event: CustomEvent) {\r\n        this.setState({ name: event.target.value });\r\n    }\r\n    private setLocation(event: CustomEvent) {\r\n        this.setState({ location: event.target.value });\r\n    }\r\n    private setDescription(event: CustomEvent) {\r\n        this.setState({ description: event.target.value });\r\n    }\r\n\r\n    private setPhotoUrl(event: CustomEvent) {\r\n        if (event.target.files && event.target.files[0]) {\r\n            this.setState({ photo: event.target.files[0] });\r\n        }\r\n    }\r\n\r\n    private async handleSubmit(event: SyntheticEvent) {\r\n        event.preventDefault();\r\n        const stateClone = {...this.state};\r\n        try {\r\n            const id = await this.props.dataService.createSpace(stateClone);  \r\n            alert(`created space with id ${id}`);\r\n        } catch (error:any) {\r\n            alert(`Error while creating space:  ${error.message}`);\r\n            console.error(error)\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n            let photoSpace;\r\n            if (this.state.photo) {\r\n                const localPhotoURL = URL.createObjectURL(this.state.photo)\r\n                photoSpace = <img alt='' src={localPhotoURL} />\r\n            } else {\r\n                photoSpace = <div></div>\r\n            }\r\n            return <form onSubmit={e => this.handleSubmit(e)}>\r\n                <label>Name:<br />\r\n                    <input name='space name' value={this.state.name} onChange={e => this.setName(e)} />\r\n                </label><br />\r\n                <label>Location:<br />\r\n                    <input name='space location' value={this.state.location} onChange={e => this.setLocation(e)} />\r\n                </label><br />\r\n                <label>Description:<br />\r\n                    <input name='space location' value={this.state.description} onChange={e => this.setDescription(e)} />\r\n                </label><br />\r\n                <label>Photo:<br />\r\n                    <input name='photo' type='file' onChange={e => this.setPhotoUrl(e)} />\r\n                </label><br />\r\n                {photoSpace}<br />\r\n                <input data-test=\"submit-button\" type=\"submit\" value=\"Create space\" />\r\n            </form>\r\n    }\r\n\r\n}","import { ICreateSpaceState } from './../components/space/createSpace';\r\nimport { Space } from './../models/model';\r\nimport {Config as AppConfig} from './config';\r\nimport {S3,config} from 'aws-sdk';\r\nimport {generateRandomId} from '../utils/utils';\r\n\r\nconfig.update({\r\n    region:AppConfig.REGION\r\n})\r\nexport class DataService{\r\n    public async getSpaces():Promise<Space[]>{\r\n        const requestURL = AppConfig.api.spaceURL;\r\n        const requestResult= await fetch(\r\n            requestURL,{\r\n                method:'GET'\r\n            }\r\n        );\r\n        const responseJSON=await requestResult.json();\r\n        console.log(JSON.stringify(responseJSON));\r\n        return responseJSON;\r\n    }\r\n\r\n    public async reserveSpace(spaceId:string):Promise<string|undefined>{\r\n        if(spaceId === '1234'){\r\n            return \"555\";\r\n        }else{\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    public async createSpace(createSpace:ICreateSpaceState) :Promise<string> {\r\n        if(createSpace.photo){\r\n            const photoURL = await this.uploadPublicFile(createSpace.photo,AppConfig.PHOTO_BUCKET);\r\n            createSpace.photoURL=photoURL;\r\n            createSpace.photo=undefined;\r\n        }\r\n        const requestURL=AppConfig.api.spaceURL;\r\n        const requestOptions:RequestInit = {\r\n            method:'POST',\r\n            body:JSON.stringify(createSpace)\r\n        };\r\n        const result=await fetch(requestURL,requestOptions);\r\n        console.log(result);\r\n        const resultJson=await result.json();\r\n        console.log(resultJson);\r\n        return JSON.stringify(resultJson.spaceid);\r\n    }\r\n\r\n    private async uploadPublicFile(file:File, bucket:string) {\r\n        const fileName=generateRandomId()+ file.name;\r\n        try {\r\n            const s3Client=new S3({\r\n                region:AppConfig.REGION\r\n            });\r\n            const uploadResult = await s3Client.upload({\r\n                Bucket:bucket,\r\n                Key:fileName,\r\n                Body:file,\r\n                ACL:'public-read'\r\n            }).promise();\r\n            return uploadResult.Location;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n}","export function generateRandomId():string{\r\n    return Math.random().toString(36).slice(2);\r\n}","export default __webpack_public_path__ + \"static/media/defaultBuilding.9e7aeda0.jpg\";","import { Component, ReactNode } from \"react\";\r\nimport defaultImage from '../../assets/images/defaultBuilding.jpg';\r\nimport './spaceComponent.css'\r\ninterface SpaceComponentProps {\r\n    spaceId:string,\r\n    name:string,\r\n    location:string,\r\n    photoURL?:string,\r\n    reserveSpace:(spaceId:string)=>void\r\n};\r\n\r\nexport class SpaceComponent extends Component <SpaceComponentProps> {\r\n\r\n    private renderImage(){\r\n        if (this.props.photoURL) {\r\n            return <img src={this.props.photoURL} alt={this.props.name} />\r\n        } else {\r\n            return <img src={defaultImage} alt={this.props.name} />\r\n        }\r\n    }\r\n    render(): ReactNode {\r\n        return <div className=\"spaceComponent\" key={this.props.spaceId}>\r\n            {this.renderImage()}\r\n            <label className=\"name\">{this.props.name}</label><br/>\r\n            <label className=\"spaceId\">{this.props.spaceId}</label><br/>\r\n            <label className=\"location\">{this.props.location}</label><br/>\r\n            <button onClick={()=>this.props.reserveSpace(this.props.spaceId)} >Reserve</button><br/>\r\n\r\n        </div>\r\n    }\r\n}","import { Component, ReactNode } from \"react\"\r\nimport './confirmModalComponent.css';\r\n\r\ninterface ConfirmModalComponentProp{\r\n    show:boolean,\r\n    content:string,\r\n    close:()=>void\r\n}\r\nexport class ConfirmModalComponent extends Component<ConfirmModalComponentProp>{\r\n\r\n    render(): ReactNode {\r\n        if (!this.props.show) {\r\n            return null;\r\n        } else {\r\n            return <div className=\"modal\">\r\n                <div className=\"modal-content\">\r\n                    <h2>You tried to reserve and ...</h2>\r\n                    <h3 className=\"modalText\">{this.props.content}</h3>\r\n                    <button onClick={()=>this.props.close()}>Ok. Close</button>\r\n                </div>\r\n            </div>\r\n        }\r\n    }\r\n}","import { Component, ReactNode } from \"react\"\r\nimport {Space} from '../../models/model';\r\nimport { DataService } from \"../../services/dataService\";\r\nimport { SpaceComponent } from \"./spaceComponent\";\r\nimport { ConfirmModalComponent } from './confirmModalComponent'\r\nimport {Link } from 'react-router-dom';\r\n\r\ninterface SpacesState {\r\n    spaces:Space[],\r\n    showModal:boolean,\r\n    modalContent:string\r\n};\r\n\r\ninterface SpacesProps {\r\n    dataService:DataService\r\n};\r\n\r\nexport default class Spaces extends Component<SpacesProps,SpacesState>{\r\n\r\n    constructor(props:SpacesProps){\r\n        super(props);\r\n        this.state={\r\n            spaces:[],\r\n            showModal:false,\r\n            modalContent:''\r\n        }\r\n        this.reserveSpace=this.reserveSpace.bind(this);\r\n        this.closeModal=this.closeModal.bind(this)\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const spaces=await this.props.dataService.getSpaces();\r\n        this.setState({\r\n            spaces:spaces\r\n        });\r\n    }\r\n\r\n    private async reserveSpace(spaceId:string){\r\n        const resered = await this.props.dataService.reserveSpace(spaceId);\r\n        if(resered){\r\n            this.setState({\r\n                showModal:true,\r\n                modalContent:`You reserved space id ${spaceId} and confimed number ${resered}`  \r\n            })\r\n        }else{\r\n            this.setState({\r\n                showModal:true,\r\n                modalContent:`You can not reserve space id ${spaceId}`\r\n            })\r\n        }\r\n\r\n    };\r\n\r\n    private closeModal(){\r\n        this.setState({\r\n            showModal:false,\r\n            modalContent:''\r\n        })\r\n    }\r\n    private renderSpaces(){\r\n        const rows:any[]=[];\r\n        for (const space of this.state.spaces) {\r\n            rows.push(\r\n                <SpaceComponent \r\n                    key={space.spaceId}\r\n                    spaceId={space.spaceId}\r\n                    name={space.name}\r\n                    location={space.location}\r\n                    photoURL={space.photoURL}\r\n                    reserveSpace={this.reserveSpace}\r\n                />\r\n            )\r\n        }\r\n        return rows;\r\n    }\r\n    render(): ReactNode {\r\n        return <div>\r\n            <h2>Welcome to the spaces page</h2>\r\n            <Link to='/createSpace' >Create Space</Link><br/>\r\n            {this.renderSpaces()}\r\n            <ConfirmModalComponent \r\n                show={this.state.showModal}\r\n                content={this.state.modalContent}\r\n                close={this.closeModal}\r\n            />\r\n        </div>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport { User } from \"../models/model\";\r\nimport { AuthService } from \"../services/authService\";\r\nimport { Login } from \"./login\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport { NavBar } from \"./navbar\";\r\nimport { Home } from \"./home\";\r\nimport { Profile } from \"./profile\";\r\nimport {CreateSpace} from './space/createSpace';\r\nimport history from \"../utils/history\";\r\nimport { DataService } from \"../services/dataService\";\r\nimport Spaces from \"./space/spaces\";\r\n\r\ninterface AppState {\r\n  user: User | undefined;\r\n}\r\nexport class App extends React.Component<{}, AppState> {\r\n  private authService: AuthService = new AuthService();\r\n  private dataService:DataService=new DataService();\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      user: undefined,\r\n    };\r\n    this.setUser = this.setUser.bind(this);\r\n  }\r\n  private async setUser(user: User) {\r\n    this.setState({\r\n      user: user,\r\n    });\r\n    await this.authService.getAWSTemporyCreds(user.cognitoUser);\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Router history={history}>\r\n          <div>\r\n            <NavBar user={this.state.user} />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/login\">\r\n                <Login authService={this.authService} setUser={this.setUser} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile authService={this.authService} user={this.state.user}/>\r\n              </Route>\r\n              <Route exact path=\"/spaces\">\r\n                <Spaces dataService={this.dataService} />\r\n              </Route>\r\n              <Route exact path=\"/createSpace\">\r\n                <CreateSpace dataService={this.dataService} />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n          </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}